// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"

	time "time"

	tls "crypto/tls"
)

// Connection is an autogenerated mock type for the Connection type
type Connection struct {
	mock.Mock
}

// AddBuffer provides a mock function with given fields: data
func (_m *Connection) AddBuffer(data ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, data...)
	_m.Called(_ca...)
}

// Close provides a mock function with given fields:
func (_m *Connection) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Flush provides a mock function with given fields:
func (_m *Connection) Flush() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadBytes provides a mock function with given fields: delim
func (_m *Connection) ReadBytes(delim byte) ([]byte, error) {
	ret := _m.Called(delim)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(byte) []byte); ok {
		r0 = rf(delim)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(byte) error); ok {
		r1 = rf(delim)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadEnvelope provides a mock function with given fields:
func (_m *Connection) ReadEnvelope() (io.Reader, error) {
	ret := _m.Called()

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReadLine provides a mock function with given fields:
func (_m *Connection) ReadLine() ([]byte, error) {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoteAddr provides a mock function with given fields:
func (_m *Connection) RemoteAddr() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetDeadline provides a mock function with given fields: d
func (_m *Connection) SetDeadline(d time.Duration) error {
	ret := _m.Called(d)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Duration) error); ok {
		r0 = rf(d)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpgradeTLS provides a mock function with given fields: config
func (_m *Connection) UpgradeTLS(config *tls.Config) error {
	ret := _m.Called(config)

	var r0 error
	if rf, ok := ret.Get(0).(func(*tls.Config) error); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
